* A security problem relating to fast-lock-cache-directories has been fixed.
  Patch: make-fast-lock-cache-directories-risky-cve-2008-2142.diff
  Provided-by: Sven Joachim <svenjoac@gmx.de>
  Originally-reported-by: "Morten Welinder" <mwelinder@gmail.com>
  Date: Mon, 12 May 2008 19:39:35 +0200
  Added-by: Rob Browning <rlb@defaultvalue.org>
  Status: incorporated upstream

  The fast-lock-cache-directories variable no longer includes the
  current directory, ".", and is now marked as risky.  This has been
  done to limit the possibility of executing arbitrary code via random
  .flc files.

  From the upstream ChangeLog:

    2008-05-12  Simon Marshall  <simon@gnu.org>

        * fast-lock.el (fast-lock-cache-directories): Remove "." from its
        default value and give it the risky-local-variable property.


--8<---------------cut here---------------start------------->8---
Index: fast-lock.el
===================================================================
RCS file: /sources/emacs/emacs/lisp/obsolete/fast-lock.el,v
retrieving revision 1.11.2.3
retrieving revision 1.11.2.4
diff -u -r1.11.2.3 -r1.11.2.4
--- old/lisp/obsolete/fast-lock.el	7 Jan 2008 01:58:14 -0000	1.11.2.3
+++ new/lisp/obsolete/fast-lock.el	12 May 2008 17:30:29 -0000	1.11.2.4
@@ -286,7 +286,7 @@
 				      (integer :tag "size")))))
   :group 'fast-lock)
 
-(defcustom fast-lock-cache-directories '("." "~/.emacs-flc")
+(defcustom fast-lock-cache-directories '("~/.emacs-flc")
 ; - `internal', keep each file's Font Lock cache file in the same file.
 ; - `external', keep each file's Font Lock cache file in the same directory.
   "*Directories in which Font Lock cache files are saved and read.
@@ -304,12 +304,15 @@
  ((\"^/your/true/home/directory/\" . \".\") \"~/.emacs-flc\")
 
 would cause a file's current directory to be used if the file is under your
-home directory hierarchy, or otherwise the absolute directory `~/.emacs-flc'."
+home directory hierarchy, or otherwise the absolute directory `~/.emacs-flc'.
+For security reasons, it is not advisable to use the file's current directory
+to avoid the possibility of using the cache of another user."
   :type '(repeat (radio (directory :tag "directory")
 			(cons :tag "Matching"
 			      (regexp :tag "regexp")
 			      (directory :tag "directory"))))
   :group 'fast-lock)
+(put 'fast-lock-cache-directories 'risky-local-variable t)
 
 (defcustom fast-lock-save-events '(kill-buffer kill-emacs)
   "*Events under which caches will be saved.
