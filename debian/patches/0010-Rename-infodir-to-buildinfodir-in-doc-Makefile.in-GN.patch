From c29cccb1d825523faf484808a699959766d71348 Mon Sep 17 00:00:00 2001
From: Rob Browning <rlb@defaultvalue.org>
Date: Tue, 19 Jun 2012 23:26:11 -0500
Subject: Rename infodir to buildinfodir in doc/*/Makefile.in (GNU bug#11737)

Overriding both DESTDIR and infodir during make install should now work.

The Emacs build process will no longer try to write directly to
infodir when both DESTDIR and infodir are overridden during make
install.  Previously, given

  make DESTDIR=/tmp/build infodir=/usr/share/info/emacs-24 install

the build process would attempt to write directly to infodir.

Origin: upstream, commit: fb0219efd1196df7de538a27159367b8220b9a8a
Bug: http://debbugs.gnu.org/cgi/bugreport.cgi?bug=11737
Applied-By: Rob Browning <rlb@defaultvalue.org>
Applied-Upstream: Fixed in Emacs 24
---
 doc/misc/Makefile.in |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/doc/misc/Makefile.in b/doc/misc/Makefile.in
index f28746f..f274153 100644
--- a/doc/misc/Makefile.in
+++ b/doc/misc/Makefile.in
@@ -26,14 +26,14 @@ srcdir=@srcdir@
 
 # Tell make where to find source files; this is needed for the makefiles.
 # Note the other doc Makefiles do not use VPATH anymore, instead
-# they set infodir to an absolute path.  Not doing that here in
+# they set buildinfodir to an absolute path.  Not doing that here in
 # case INFO_TARGETS gets too long for some feeble shells.
 # (cf src/Makefile.in's passing of $lisp to make-docfile)
 VPATH=@srcdir@
 
 ## Where the output files go.
 ## Note that the setfilename command in the .texi files assumes this.
-infodir=../../info
+buildinfodir=../../info
 ## Directory with emacsver.texi.
 ## Currently only used by efaq and calc.
 emacsdir = $(srcdir)/../emacs
@@ -45,7 +45,7 @@ MAKEINFO_OPTS = --force -I$(emacsdir)
 
 # Also add new entries to INFO_FILES in the top-level Makefile.in.
 INFO_TARGETS = \
-	$(infodir)/efaq
+	$(buildinfodir)/efaq
 
 DVI_TARGETS = \
 	faq.dvi
@@ -61,7 +61,7 @@ TEXI2PDF = texi2pdf
 ENVADD = TEXINPUTS="$(srcdir):$(emacsdir):$(TEXINPUTS)" \
          MAKEINFO="$(MAKEINFO) $(MAKEINFO_OPTS)"
 
-mkinfodir = @cd ${srcdir}; test -d ${infodir} || mkdir ${infodir} || test -d ${infodir}
+mkinfodir = @cd ${srcdir}; test -d ${buildinfodir} || mkdir ${buildinfodir} || test -d ${buildinfodir}
 
 .PHONY: info dvi pdf
 
@@ -83,8 +83,8 @@ pdf: $(PDF_TARGETS)
 # Note: "<" is not portable in ordinary make rules.
 
 ## "short" target names for convenience, to just rebuild one manual.
-efaq : $(infodir)/efaq
-$(infodir)/efaq: faq.texi $(emacsdir)/emacsver.texi
+efaq : $(buildinfodir)/efaq
+$(buildinfodir)/efaq: faq.texi $(emacsdir)/emacsver.texi
 	$(mkinfodir)
 	cd $(srcdir); $(MAKEINFO) $(MAKEINFO_OPTS) faq.texi
 faq.dvi: ${srcdir}/faq.texi $(emacsdir)/emacsver.texi
@@ -114,7 +114,7 @@ clean: mostlyclean
 distclean: clean
 #	rm -f Makefile
 
-## infodir is relative to srcdir.
+## buildinfodir is relative to srcdir.
 maintainer-clean: distclean
 	cd $(srcdir); for file in $(INFO_TARGETS); do \
 	  rm -f $${file} $${file}-[1-9] $${file}-[1-9][0-9]; \
