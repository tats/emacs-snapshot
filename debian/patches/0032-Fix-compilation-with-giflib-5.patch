From: =?utf-8?q?Ulrich_M=C3=BCller?= <ulm@gentoo.org>
Date: Sun, 17 Jan 2016 03:14:11 +0100
Subject: Fix compilation with giflib-5

Backported from Emacs 24, comprises parts of the following commits:

commit be316ede5fffb724852ee225489e70778d240bb0
Author: Paul Eggert <eggert@cs.ucla.edu>
Date:   Tue Jan 7 13:14:32 2014 -0800

    Fix misdisplay of interlaced GIFs with libgif5.

commit f3606ef766bcec86789316a05949f1e67a51e7c1
Author: Barry Fishman <barry_fishman@acm.org>
Date:   Wed Oct 9 20:37:44 2013 -0400

    Handle giflib 5 changes (tiny change)

Origin: https://gitweb.gentoo.org/proj/emacs-patches.git/commit/?id=866dfcae6b4f3ae8d4af7ac5f687e24ee10589d1
---
 configure.in |  5 +++--
 src/image.c  | 39 +++++++++++++++++++++++++++++++++++++++
 2 files changed, 42 insertions(+), 2 deletions(-)

diff --git a/configure.in b/configure.in
index a44ad40..8099f69 100644
--- a/configure.in
+++ b/configure.in
@@ -2559,8 +2559,9 @@ HAVE_GIF=no
 if test "${HAVE_X11}" = "yes" && test "${with_gif}" != "no"; then
   AC_CHECK_HEADER(gif_lib.h,
 # EGifPutExtensionLast only exists from version libungif-4.1.0b1.
-# Earlier versions can crash Emacs.
-    AC_CHECK_LIB(gif, EGifPutExtensionLast, HAVE_GIF=yes, try_libungif=yes))
+# Earlier versions can crash Emacs, but version 5.0 removes EGifPutExtensionLast.
+    [AC_CHECK_LIB(gif, GifMakeMapObject, HAVE_GIF=yes,
+        [AC_CHECK_LIB(gif, EGifPutExtensionLast, HAVE_GIF=yes, try_libungif=yes)])])
 
   if test "$HAVE_GIF" = yes; then
       ac_gif_lib_name="-lgif"
diff --git a/src/image.c b/src/image.c
index b648c62..9b96373 100644
--- a/src/image.c
+++ b/src/image.c
@@ -8001,6 +8001,13 @@ gif_image_p (object)
 
 #endif /* HAVE_NTGUI || MAC_OS */
 
+/* Giflib before 5.0 didn't define these macros.  */
+#ifndef GIFLIB_MAJOR
+#define GIFLIB_MAJOR 0
+#endif
+#ifndef GIFLIB_MINOR
+#define GIFLIB_MINOR 0
+#endif
 
 #ifdef HAVE_NTGUI
 
@@ -8108,7 +8115,11 @@ gif_load (f, img)
 
       /* Open the GIF file.  Casting return value avoids a GCC warning
 	 on W32.  */
+#if GIFLIB_MAJOR < 5
       gif = (GifFileType *)fn_DGifOpenFileName (SDATA (file));
+#else
+      gif = (GifFileType *)fn_DGifOpenFileName (SDATA (file), NULL);
+#endif
       if (gif == NULL)
 	{
 	  image_error ("Cannot open `%s'", file, Qnil);
@@ -8125,7 +8136,11 @@ gif_load (f, img)
       memsrc.index = 0;
 
       /* Casting return value avoids a GCC warning on W32.  */
+#if GIFLIB_MAJOR < 5
       gif = (GifFileType *)fn_DGifOpen(&memsrc, gif_read_from_memory);
+#else
+      gif = (GifFileType *)fn_DGifOpen(&memsrc, gif_read_from_memory, NULL);
+#endif
       if (!gif)
 	{
 	  image_error ("Cannot open memory source `%s'", img->spec, Qnil);
@@ -8138,7 +8153,11 @@ gif_load (f, img)
   if (!check_image_size (f, gif->SWidth, gif->SHeight))
     {
       image_error ("Invalid image size", Qnil, Qnil);
+#if GIFLIB_MAJOR < 5 || (GIFLIB_MAJOR == 5 && GIFLIB_MINOR == 0)
       fn_DGifCloseFile (gif);
+#else
+      fn_DGifCloseFile (gif, NULL);
+#endif
       UNGCPRO;
       return 0;
     }
@@ -8148,7 +8167,11 @@ gif_load (f, img)
   if (rc == GIF_ERROR)
     {
       image_error ("Error reading `%s'", img->spec, Qnil);
+#if GIFLIB_MAJOR < 5 || (GIFLIB_MAJOR == 5 && GIFLIB_MINOR == 0)
       fn_DGifCloseFile (gif);
+#else
+      fn_DGifCloseFile (gif, NULL);
+#endif
       UNGCPRO;
       return 0;
     }
@@ -8159,7 +8182,11 @@ gif_load (f, img)
     {
       image_error ("Invalid image number `%s' in image `%s'",
 		   image, img->spec);
+#if GIFLIB_MAJOR < 5 || (GIFLIB_MAJOR == 5 && GIFLIB_MINOR == 0)
       fn_DGifCloseFile (gif);
+#else
+      fn_DGifCloseFile (gif, NULL);
+#endif
       UNGCPRO;
       return 0;
     }
@@ -8181,7 +8208,11 @@ gif_load (f, img)
   if (!check_image_size (f, width, height))
     {
       image_error ("Invalid image size", Qnil, Qnil);
+#if GIFLIB_MAJOR < 5 || (GIFLIB_MAJOR == 5 && GIFLIB_MINOR == 0)
       fn_DGifCloseFile (gif);
+#else
+      fn_DGifCloseFile (gif, NULL);
+#endif
       UNGCPRO;
       return 0;
     }
@@ -8189,7 +8220,11 @@ gif_load (f, img)
   /* Create the X image and pixmap.  */
   if (!x_create_x_image_and_pixmap (f, width, height, 0, &ximg, &img->pixmap))
     {
+#if GIFLIB_MAJOR < 5 || (GIFLIB_MAJOR == 5 && GIFLIB_MINOR == 0)
       fn_DGifCloseFile (gif);
+#else
+      fn_DGifCloseFile (gif, NULL);
+#endif
       UNGCPRO;
       return 0;
     }
@@ -8296,7 +8331,11 @@ gif_load (f, img)
 				Fcons (make_number (gif->ImageCount),
 				       img->data.lisp_val));
 
+#if GIFLIB_MAJOR < 5 || (GIFLIB_MAJOR == 5 && GIFLIB_MINOR == 0)
   fn_DGifCloseFile (gif);
+#else
+  fn_DGifCloseFile (gif, NULL);
+#endif
 
   /* Maybe fill in the background field while we have ximg handy. */
   if (NILP (image_spec_value (img->spec, QCbackground, NULL)))
