#### Makefile for documentation other than the Emacs manual.

# Copyright (C) 1994, 1996-2012 Free Software Foundation, Inc.

# This file is part of GNU Emacs.

# GNU Emacs is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# GNU Emacs is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

SHELL = /bin/sh

# Where to find the source code.  $(srcdir) will be the man-aux
# subdirectory of the source tree.  This is
# set by the configure script's `--srcdir' option.
srcdir=@srcdir@

# Tell make where to find source files; this is needed for the makefiles.
# Note the other doc Makefiles do not use VPATH anymore, instead
# they set buildinfodir to an absolute path.  Not doing that here in
# case INFO_TARGETS gets too long for some feeble shells.
# (cf src/Makefile.in's passing of $lisp to make-docfile)
VPATH=@srcdir@

## Where the output files go.
## Note that the setfilename command in the .texi files assumes this.
buildinfodir=../../info
## Directory with emacsver.texi.
## Currently only used by efaq and calc.
emacsdir = $(srcdir)/../emacs

# The makeinfo program is part of the Texinfo distribution.
# Use --force so that it generates output even if there are errors.
MAKEINFO = @MAKEINFO@
MAKEINFO_OPTS = --force -I$(emacsdir)

# Also add new entries to INFO_FILES in the top-level Makefile.in.
INFO_TARGETS = \
	$(buildinfodir)/efaq

DVI_TARGETS = \
	faq.dvi

PDF_TARGETS = \
	faq.pdf

HTML_TARGETS = emacs-faq.html

TEXI2DVI = texi2dvi
TEXI2PDF = texi2pdf

ENVADD = TEXINPUTS="$(srcdir):$(emacsdir):$(TEXINPUTS)" \
         MAKEINFO="$(MAKEINFO) $(MAKEINFO_OPTS)"

mkinfodir = @cd ${srcdir}; test -d ${buildinfodir} || mkdir ${buildinfodir} || test -d ${buildinfodir}

.PHONY: info dvi pdf

info: $(INFO_TARGETS)

# please modify this for all the web manual targets
webhack: clean
	$(MAKE) pdf MAKEINFO_OPTS="-DWEBHACKDEVEL $(MAKEINFO_OPTS)"

dvi: $(DVI_TARGETS)

pdf: $(PDF_TARGETS)

# Note that all the Info targets build the Info files
# in srcdir.  There is no provision for Info files
# to exist in the build directory.
# In a distribution of Emacs, the Info files should be up to date.

# Note: "<" is not portable in ordinary make rules.

## "short" target names for convenience, to just rebuild one manual.
efaq : $(buildinfodir)/efaq
$(buildinfodir)/efaq: faq.texi $(emacsdir)/emacsver.texi
	$(mkinfodir)
	cd $(srcdir); $(MAKEINFO) $(MAKEINFO_OPTS) faq.texi
faq.dvi: ${srcdir}/faq.texi $(emacsdir)/emacsver.texi
	$(ENVADD) $(TEXI2DVI) ${srcdir}/faq.texi
faq.pdf: ${srcdir}/faq.texi $(emacsdir)/emacsver.texi
	$(ENVADD) $(TEXI2PDF) ${srcdir}/faq.texi
## This is the name used on the Emacs web-page.
## sed fixes up links to point to split version of the manual.
emacs-faq.html: ${srcdir}/faq.texi $(emacsdir)/emacsver.texi
	$(MAKEINFO) $(MAKEINFO_OPTS) --no-split \
	  --css-ref='/layout.css' --html -o $@ ${srcdir}/faq.texi
	sed -i -e 's|a href="\([a-z]*\)\.html#\([^"]*\)"|a href="manual/html_node/\1/\2.html"|g' \
	  -e 's|/Top\.html|/|g' $@
emacs-faq.text: ${srcdir}/faq.texi $(emacsdir)/emacsver.texi
	$(MAKEINFO) $(MAKEINFO_OPTS) --plaintext -o $@ ${srcdir}/faq.texi

.PHONY: mostlyclean clean distclean maintainer-clean

mostlyclean:
	rm -f *.aux *.log *.toc *.cp *.cps *.fn *.fns *.ky *.kys \
	  *.op *.ops *.pg *.pgs *.tp *.tps *.vr *.vrs
	rm -f gnustmp.*

clean: mostlyclean
	rm -f $(DVI_TARGETS) $(PDF_TARGETS) $(HTML_TARGETS) emacs-faq.text

distclean: clean
#	rm -f Makefile

## buildinfodir is relative to srcdir.
maintainer-clean: distclean
	cd $(srcdir); for file in $(INFO_TARGETS); do \
	  rm -f $${file} $${file}-[1-9] $${file}-[1-9][0-9]; \
	done

### Makefile ends here
